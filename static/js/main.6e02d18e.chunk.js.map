{"version":3,"sources":["assets/images/code.png","constants/numOfQuestions.js","constants/categories.js","constants/countdownTime.js","constants/difficulty.js","constants/questionsType.js","components/Main/index.js","components/Loader/index.js","utils/timeConverter.js","components/Countdown/index.js","components/ShareButton/index.js","components/Result/Stats.js","utils/calculateGrade.js","components/Result/QA.js","components/Result/index.js","components/Offline/index.js","utils/getRandomNumber.js","components/Quiz/index.js","components/App/index.js","api/index.js","serviceWorker.js","index.js"],"names":["module","exports","CATEGORIES","key","text","value","NUM_OF_QUESTIONS","i","object","push","DIFFICULTY","QUESTIONS_TYPE","COUNTDOWN_TIME","Main","props","state","category","numOfQ","difficulty","type","time","setValue","bind","name","this","setState","allFieldsSelected","selectedValues","Container","Segment","Item","Group","divided","Image","src","codeImg","Content","Header","Divider","Meta","Dropdown","fluid","selection","placeholder","options","onChange","e","Extra","Button","primary","content","onClick","startQuiz","size","icon","labelPosition","disabled","Component","Loader","Message","Icon","loading","timeConverter","milliseconds","hours","Math","floor","slice","minutes","seconds","Countdown","countdownTime","timerStart","timerTime","totalTime","timer","setInterval","newTime","clearInterval","Swal","fire","title","onClose","timesUp","startTimer","timeAmount","basic","floated","Popup","trigger","active","position","ShareButton","navigator","share","circular","document","url","then","console","log","catch","error","Stats","totalQuestions","correctAnswers","timeTakesToComplete","retakeQuiz","backToHome","score","Number","toFixed","percentage","parseInt","grade","remarks","calculateGrade","as","textAlign","block","style","marginTop","marginRight","marginBottom","color","QA","questionsAndAnswers","Table","celled","striped","Row","HeaderCell","Body","map","item","Cell","question","user_answer","correct_answer","point","Result","activeTab","handleTabClick","Menu","widths","Offline","getRandomNumber","min","max","ceil","random","Quiz","quizData","isLoading","questionIndex","userSlectedAns","quizIsCompleted","isOffline","undefined","setData","handleItemClick","handleNext","renderResult","startNewQuiz","resolveError","API","fetch","respone","json","result","setTimeout","results","onLine","length","html","outPut","incorrect_answers","splice","he","decode","resultRef","floating","Description","vertical","option","letter","decodedOption","App","isQuizStart","PATH_BASE","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","toast","showConfirmButton","onSuccess","ReactDOM","render","getElementById","URL","process","href","origin","addEventListener","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6e02d18e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/code.60b1b385.png\";","const NUM_OF_QUESTIONS = [];\n\nfor (let i = 1; i <= 50; i++) {\n  const object = { key: i, text: `${i}`, value: i };\n  NUM_OF_QUESTIONS.push(object);\n}\n\nexport default NUM_OF_QUESTIONS;\n","const CATEGORIES = [\n  {\n    key: '0',\n    text: 'Any Category',\n    value: '0'\n  },\n  {\n    key: '9',\n    text: 'General Knowledge',\n    value: '9'\n  },\n  {\n    key: '10',\n    text: 'Entertainment: Books',\n    value: '10'\n  },\n  {\n    key: '11',\n    text: 'Entertainment: Films',\n    value: '11'\n  },\n  {\n    key: '12',\n    text: 'Entertainment: Music',\n    value: '12'\n  },\n  {\n    key: '13',\n    text: 'Entertainment: Musicals & Theatres',\n    value: '13'\n  },\n  {\n    key: '14',\n    text: 'Entertainment: Television',\n    value: '14'\n  },\n  {\n    key: '15',\n    text: 'Entertainment: Video Games',\n    value: '15'\n  },\n  {\n    key: '16',\n    text: 'Entertainment: Board Games',\n    value: '16'\n  },\n  {\n    key: '17',\n    text: 'Science & Nature',\n    value: '17'\n  },\n  {\n    key: '18',\n    text: 'Science: Computers',\n    value: '18'\n  },\n  {\n    key: '19',\n    text: 'Science: Mathematics',\n    value: '19'\n  },\n  {\n    key: '20',\n    text: 'Mythology',\n    value: '20'\n  },\n  {\n    key: '21',\n    text: 'Sports',\n    value: '21'\n  },\n  {\n    key: '22',\n    text: 'Geography',\n    value: '22'\n  },\n  {\n    key: '23',\n    text: 'History',\n    value: '23'\n  },\n  {\n    key: '24',\n    text: 'Politics',\n    value: '24'\n  },\n  {\n    key: '25',\n    text: 'Arts',\n    value: '25'\n  },\n  {\n    key: '26',\n    text: 'Celebrities',\n    value: '26'\n  },\n  {\n    key: '27',\n    text: 'Animals',\n    value: '27'\n  },\n  {\n    key: '28',\n    text: 'Vehicles',\n    value: '28'\n  },\n  {\n    key: '29',\n    text: 'Entertainment: Comics',\n    value: '29'\n  },\n  {\n    key: '30',\n    text: 'Science: Gadgets',\n    value: '30'\n  },\n  {\n    key: '31',\n    text: 'Entertainment: Japanese Anime & Manga',\n    value: '31'\n  },\n  {\n    key: '32',\n    text: 'Entertainment: Cartoon & Animations',\n    value: '32'\n  }\n];\n\nexport default CATEGORIES;\n","const COUNTDOWN_TIME = [];\n\nfor (let i = 1; i <= 60; i++) {\n  const object = { key: i, text: `${i}`, value: i };\n  COUNTDOWN_TIME.push(object);\n}\n\nexport default COUNTDOWN_TIME;\n","const DIFFICULTY = [\n  {\n    key: '0',\n    text: 'Any Difficulty',\n    value: '0'\n  },\n  {\n    key: 'easy',\n    text: 'Easy',\n    value: 'easy'\n  },\n  {\n    key: 'medium',\n    text: 'Medium',\n    value: 'medium'\n  },\n  {\n    key: 'hard',\n    text: 'Hard',\n    value: 'hard'\n  }\n];\n\nexport default DIFFICULTY;\n","const QUESTIONS_TYPE = [\n  {\n    key: '0',\n    text: 'Any Type',\n    value: '0'\n  },\n  {\n    key: 'multiple',\n    text: 'Multiple Choice',\n    value: 'multiple'\n  },\n  {\n    key: 'boolean',\n    text: 'True / False',\n    value: 'boolean'\n  }\n];\n\nexport default QUESTIONS_TYPE;\n","import React, { Component } from 'react';\nimport {\n  Container,\n  Segment,\n  Item,\n  Dropdown,\n  Divider,\n  Button\n} from 'semantic-ui-react';\nimport codeImg from '../../assets/images/code.png';\n\nimport {\n  CATEGORIES,\n  NUM_OF_QUESTIONS,\n  DIFFICULTY,\n  QUESTIONS_TYPE,\n  COUNTDOWN_TIME\n} from '../../constants';\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      category: null,\n      numOfQ: null,\n      difficulty: null,\n      type: null,\n      time: null\n    };\n\n    this.setValue = this.setValue.bind(this);\n  }\n\n  setValue(name, value) {\n    this.setState({ [name]: value });\n  }\n\n  render() {\n    const { category, numOfQ, difficulty, type, time } = this.state;\n\n    let allFieldsSelected = false;\n    let selectedValues = null;\n\n    if (category && numOfQ && difficulty && type && time) {\n      allFieldsSelected = true;\n\n      selectedValues = {\n        category,\n        numOfQ,\n        difficulty,\n        type,\n        time\n      };\n    }\n\n    return (\n      <Container>\n        <Segment>\n          <Item.Group divided>\n            <Item>\n              <Item.Image src={codeImg} />\n              <Item.Content>\n                <Item.Header>\n                  <h1>Open Trivia Questions</h1>\n                </Item.Header>\n                <br />\n                <Divider />\n                <Item.Meta>\n                  <Dropdown\n                    fluid\n                    selection\n                    name=\"category\"\n                    placeholder=\"Select Quiz Category\"\n                    options={CATEGORIES}\n                    onChange={(e, { name, value }) =>\n                      this.setValue(name, value)\n                    }\n                  />\n                  <br />\n                  <Dropdown\n                    fluid\n                    selection\n                    name=\"numOfQ\"\n                    placeholder=\"Select No. of Questions\"\n                    options={NUM_OF_QUESTIONS}\n                    onChange={(e, { name, value }) =>\n                      this.setValue(name, value)\n                    }\n                  />\n                  <br />\n                  <Dropdown\n                    fluid\n                    selection\n                    name=\"difficulty\"\n                    placeholder=\"Select Difficulty Level\"\n                    options={DIFFICULTY}\n                    onChange={(e, { name, value }) =>\n                      this.setValue(name, value)\n                    }\n                  />\n                  <br />\n                  <Dropdown\n                    fluid\n                    selection\n                    name=\"type\"\n                    placeholder=\"Select Questions Type\"\n                    options={QUESTIONS_TYPE}\n                    onChange={(e, { name, value }) =>\n                      this.setValue(name, value)\n                    }\n                  />\n                  <br />\n                  <Dropdown\n                    fluid\n                    selection\n                    name=\"time\"\n                    placeholder=\"Select Countdown Time (In Minutes)\"\n                    options={COUNTDOWN_TIME}\n                    onChange={(e, { name, value }) =>\n                      this.setValue(name, value)\n                    }\n                  />\n                </Item.Meta>\n                <Divider />\n                <Item.Extra>\n                  {allFieldsSelected ? (\n                    <Button\n                      primary\n                      content=\"Start Quiz\"\n                      onClick={() => this.props.startQuiz(selectedValues)}\n                      size=\"big\"\n                      icon=\"play\"\n                      labelPosition=\"left\"\n                    />\n                  ) : (\n                    <Button\n                      disabled\n                      primary\n                      content=\"Start Quiz\"\n                      size=\"big\"\n                      icon=\"play\"\n                      labelPosition=\"left\"\n                    />\n                  )}\n                </Item.Extra>\n              </Item.Content>\n            </Item>\n          </Item.Group>\n        </Segment>\n        <br />\n      </Container>\n    );\n  }\n}\n\nexport default Main;\n","import React from 'react';\nimport { Container, Message, Icon } from 'semantic-ui-react';\n\nconst Loader = ({ text }) => (\n  <Container>\n    <Message icon size=\"big\">\n      <Icon name=\"circle notched\" loading />\n      <Message.Content>\n        <Message.Header>Just one second</Message.Header>\n        {text || 'We are fetching that content for you.'}\n      </Message.Content>\n    </Message>\n  </Container>\n);\n\nexport default Loader;\n","const timeConverter = milliseconds => {\n  const hours = ('0' + Math.floor((milliseconds / 3600000) % 60)).slice(-2);\n  const minutes = ('0' + Math.floor((milliseconds / 60000) % 60)).slice(-2);\n  const seconds = ('0' + (Math.floor((milliseconds / 1000) % 60) % 60)).slice(\n    -2\n  );\n\n  return {\n    hours,\n    minutes,\n    seconds\n  };\n};\n\nexport { timeConverter };\n","import React, { Component } from 'react';\nimport { Button, Popup } from 'semantic-ui-react';\nimport Swal from 'sweetalert2';\n\nimport { timeConverter } from '../../utils/timeConverter';\n\nclass Countdown extends Component {\n  constructor(props) {\n    super(props);\n\n    const countdownTime = props.countdownTime * 60000;\n\n    this.state = {\n      timerStart: 0,\n      timerTime: countdownTime,\n      totalTime: countdownTime\n    };\n  }\n\n  startTimer() {\n    this.timer = setInterval(() => {\n      const newTime = this.state.timerTime - 1000;\n\n      if (newTime >= 0) {\n        this.setState({\n          timerTime: newTime\n        });\n      } else {\n        clearInterval(this.timer);\n        Swal.fire({\n          title: 'YOUR TIME IS UP',\n          type: 'info',\n          timer: 5000,\n          onClose: () => {\n            this.props.timesUp();\n          }\n        });\n      }\n    }, 1000);\n  }\n\n  componentDidMount() {\n    this.startTimer();\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n\n    const { timerTime, totalTime } = this.state;\n    this.props.timeAmount(timerTime, totalTime);\n  }\n\n  render() {\n    const { timerTime } = this.state;\n    const { hours, minutes, seconds } = timeConverter(timerTime);\n\n    return (\n      <Button.Group size=\"massive\" basic floated=\"right\">\n        <Popup\n          content=\"Hours\"\n          trigger={<Button active>{hours}</Button>}\n          position=\"bottom left\"\n        />\n        <Popup\n          content=\"Minutes\"\n          trigger={<Button active>{minutes}</Button>}\n          position=\"bottom left\"\n        />\n        <Popup\n          content=\"Seconds\"\n          trigger={<Button active>{seconds}</Button>}\n          position=\"bottom left\"\n        />\n      </Button.Group>\n    );\n  }\n}\n\nexport default Countdown;\n","import React, { Fragment } from 'react';\nimport { Button } from 'semantic-ui-react';\n\nconst ShareButton = () => {\n  const doShare = () => {\n    navigator\n      .share({\n        title: document.title,\n        text: 'Check out the QuizApp — it rocks!',\n        url: 'https://safdarjamal.github.io/quiz-app'\n      })\n      .then(() => {\n        console.log('Successfully shared');\n      })\n      .catch(error => console.log(error));\n  };\n\n  return (\n    <Fragment>\n      {navigator.share ? (\n        <Button\n          title=\"Share\"\n          floated=\"right\"\n          size=\"big\"\n          circular\n          icon=\"share alternate\"\n          onClick={doShare}\n        />\n      ) : null}\n    </Fragment>\n  );\n};\n\nexport default ShareButton;\n","import React from 'react';\nimport { Segment, Header, Button } from 'semantic-ui-react';\nimport ShareButton from '../ShareButton';\n\nimport { calculateGrade } from '../../utils/calculateGrade';\nimport { timeConverter } from '../../utils/timeConverter';\n\nconst Stats = props => {\n  const {\n    totalQuestions,\n    correctAnswers,\n    timeTakesToComplete,\n    retakeQuiz,\n    backToHome\n  } = props;\n\n  const score = Number(((correctAnswers * 100) / totalQuestions).toFixed(2));\n  const { grade, remarks } = calculateGrade(score);\n  const { hours, minutes, seconds } = timeConverter(\n    timeTakesToComplete.totalTime - timeTakesToComplete.timerTime\n  );\n\n  return (\n    <Segment>\n      <Header as=\"h1\" textAlign=\"center\" block>\n        {remarks}\n      </Header>\n      <Header as=\"h2\" textAlign=\"center\" block>\n        Grade: {grade}\n      </Header>\n      <Header as=\"h3\" textAlign=\"center\" block>\n        Total Questions: {totalQuestions}\n      </Header>\n      <Header as=\"h3\" textAlign=\"center\" block>\n        Correct Answers: {correctAnswers}\n      </Header>\n      <Header as=\"h3\" textAlign=\"center\" block>\n        Your Score: {score}%\n      </Header>\n      <Header as=\"h3\" textAlign=\"center\" block>\n        Passing Score: 60%\n      </Header>\n      <Header as=\"h3\" textAlign=\"center\" block>\n        Time Takes: {`${hours} : ${minutes} : ${seconds}`}\n      </Header>\n      <div style={{ marginTop: 35 }}>\n        <Button\n          primary\n          content=\"Retake Quiz\"\n          onClick={retakeQuiz}\n          size=\"big\"\n          icon=\"redo\"\n          labelPosition=\"left\"\n          style={{ marginRight: 15, marginBottom: 8 }}\n        />\n        <Button\n          color=\"teal\"\n          content=\"Back to Home\"\n          onClick={backToHome}\n          size=\"big\"\n          icon=\"home\"\n          labelPosition=\"left\"\n          style={{ marginBottom: 8 }}\n        />\n        <ShareButton />\n      </div>\n    </Segment>\n  );\n};\n\nexport default Stats;\n","const calculateGrade = score => {\n  const percentage = parseInt(score);\n\n  let grade = null;\n  let remarks = null;\n\n  if (percentage >= 97) {\n    grade = 'A+';\n  } else if (percentage >= 93 && percentage <= 96) {\n    grade = 'A';\n  } else if (percentage >= 90 && percentage <= 92) {\n    grade = 'A-';\n  } else if (percentage >= 87 && percentage <= 89) {\n    grade = 'B+';\n  } else if (percentage >= 83 && percentage <= 86) {\n    grade = 'B';\n  } else if (percentage >= 80 && percentage <= 82) {\n    grade = 'B-';\n  } else if (percentage >= 77 && percentage <= 79) {\n    grade = 'C+';\n  } else if (percentage >= 73 && percentage <= 76) {\n    grade = 'C';\n  } else if (percentage >= 70 && percentage <= 72) {\n    grade = 'C-';\n  } else if (percentage >= 67 && percentage <= 69) {\n    grade = 'D+';\n  } else if (percentage >= 63 && percentage <= 66) {\n    grade = 'D';\n  } else if (percentage >= 60 && percentage <= 62) {\n    grade = 'D-';\n  } else if (percentage < 60) {\n    grade = 'F';\n  }\n\n  if (score >= 60) {\n    remarks = 'Congratulations, YOU PASSED!';\n  } else {\n    remarks = 'Sorry, YOU FAILED!';\n  }\n\n  return {\n    grade,\n    remarks\n  };\n};\n\nexport { calculateGrade };\n","import React from 'react';\nimport { Table } from 'semantic-ui-react';\n\nconst QA = ({ questionsAndAnswers }) => (\n  <Table celled striped>\n    <Table.Header>\n      <Table.Row>\n        <Table.HeaderCell>No.</Table.HeaderCell>\n        <Table.HeaderCell>Questions</Table.HeaderCell>\n        <Table.HeaderCell>Your Answers</Table.HeaderCell>\n        <Table.HeaderCell>Correct Answers</Table.HeaderCell>\n        <Table.HeaderCell>Points</Table.HeaderCell>\n      </Table.Row>\n    </Table.Header>\n    <Table.Body>\n      {questionsAndAnswers.map((item, i) => (\n        <Table.Row key={i + 1}>\n          <Table.Cell>{i + 1}</Table.Cell>\n          <Table.Cell>{item.question}</Table.Cell>\n          <Table.Cell>{item.user_answer}</Table.Cell>\n          <Table.Cell>{item.correct_answer}</Table.Cell>\n          <Table.Cell>{item.point}</Table.Cell>\n        </Table.Row>\n      ))}\n    </Table.Body>\n  </Table>\n);\n\nexport default QA;\n","import React, { Component } from 'react';\nimport { Container, Menu } from 'semantic-ui-react';\n\nimport Stats from './Stats';\nimport QA from './QA';\n\nclass Result extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeTab: 'Stats'\n    };\n\n    this.handleTabClick = this.handleTabClick.bind(this);\n  }\n\n  handleTabClick(e, { name }) {\n    this.setState({ activeTab: name });\n  }\n\n  render() {\n    const { activeTab } = this.state;\n    const {\n      totalQuestions,\n      correctAnswers,\n      timeTakesToComplete,\n      questionsAndAnswers,\n      retakeQuiz,\n      backToHome\n    } = this.props;\n\n    return (\n      <Container>\n        <Menu fluid widths={2}>\n          <Menu.Item\n            name=\"Stats\"\n            active={activeTab === 'Stats'}\n            onClick={this.handleTabClick}\n          />\n          <Menu.Item\n            name=\"Q / A\"\n            active={activeTab === 'Q / A'}\n            onClick={this.handleTabClick}\n          />\n        </Menu>\n\n        {activeTab === 'Stats' && (\n          <Stats\n            totalQuestions={totalQuestions}\n            correctAnswers={correctAnswers}\n            timeTakesToComplete={timeTakesToComplete}\n            retakeQuiz={retakeQuiz}\n            backToHome={backToHome}\n          />\n        )}\n        {activeTab === 'Q / A' && (\n          <QA questionsAndAnswers={questionsAndAnswers} />\n        )}\n        <br />\n      </Container>\n    );\n  }\n}\n\nexport default Result;\n","import React from 'react';\nimport { Container, Segment, Header, Icon } from 'semantic-ui-react';\n\nconst Offline = () => (\n  <Container>\n    <Segment placeholder>\n      <Header icon>\n        <Icon name=\"unlink\" />\n        <br />\n        It looks like you're offline, Please check your internet connection.\n      </Header>\n    </Segment>\n  </Container>\n);\n\nexport default Offline;\n","const getRandomNumber = (min, max) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\nexport { getRandomNumber };\n","import React, { Component } from 'react';\nimport {\n  Container,\n  Segment,\n  Item,\n  Divider,\n  Button,\n  Icon,\n  Message,\n  Menu,\n  Header\n} from 'semantic-ui-react';\nimport Swal from 'sweetalert2';\n\nimport Loader from '../Loader';\nimport Countdown from '../Countdown';\nimport Result from '../Result';\nimport Offline from '../Offline';\n\nimport he from 'he';\nimport { getRandomNumber } from '../../utils/getRandomNumber';\n\nclass Quiz extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      quizData: null,\n      isLoading: true,\n      questionIndex: 0,\n      correctAnswers: 0,\n      userSlectedAns: null,\n      quizIsCompleted: false,\n      questionsAndAnswers: [],\n      isOffline: false\n    };\n\n    this.timeTakesToComplete = undefined;\n\n    this.setData = this.setData.bind(this);\n    this.handleItemClick = this.handleItemClick.bind(this);\n    this.handleNext = this.handleNext.bind(this);\n    this.timesUp = this.timesUp.bind(this);\n    this.timeAmount = this.timeAmount.bind(this);\n    this.renderResult = this.renderResult.bind(this);\n    this.retakeQuiz = this.retakeQuiz.bind(this);\n    this.startNewQuiz = this.startNewQuiz.bind(this);\n    this.resolveError = this.resolveError.bind(this);\n  }\n\n  componentDidMount() {\n    const { API } = this.props;\n\n    fetch(API)\n      .then(respone => respone.json())\n      .then(result => setTimeout(() => this.setData(result.results), 1000))\n      .catch(error => setTimeout(() => this.resolveError(error), 1000));\n  }\n\n  resolveError(error) {\n    if (!navigator.onLine) {\n      this.setState({ isOffline: true });\n      console.log('Connection problem');\n    } else {\n      this.setState({ isOffline: true });\n      console.log('API problem ==> ', error);\n    }\n  }\n\n  setData(results) {\n    if (results.length === 0) {\n      const message =\n        \"The API doesn't have enough questions for your query<br />\" +\n        '(ex. Asking for 50 questions in a category that only has 20).' +\n        '<br /><br />Please change number of questions, difficulty level ' +\n        'or type of questions.';\n\n      return Swal.fire({\n        title: 'Oops...',\n        html: message,\n        type: 'error',\n        timer: 10000,\n        onClose: () => {\n          this.props.backToHome();\n        }\n      });\n    }\n\n    const quizData = results;\n    const { questionIndex } = this.state;\n    const outPut = getRandomNumber(0, 3);\n    const options = [...quizData[questionIndex].incorrect_answers];\n    options.splice(outPut, 0, quizData[questionIndex].correct_answer);\n\n    this.setState({ quizData, isLoading: false, options, outPut });\n  }\n\n  handleItemClick(e, { name }) {\n    this.setState({ userSlectedAns: name });\n  }\n\n  handleNext() {\n    const {\n      userSlectedAns,\n      quizData,\n      questionIndex,\n      correctAnswers,\n      questionsAndAnswers\n    } = this.state;\n\n    let point = 0;\n    if (userSlectedAns === he.decode(quizData[questionIndex].correct_answer)) {\n      point = 1;\n    }\n\n    questionsAndAnswers.push({\n      question: he.decode(quizData[questionIndex].question),\n      user_answer: userSlectedAns,\n      correct_answer: he.decode(quizData[questionIndex].correct_answer),\n      point\n    });\n\n    if (questionIndex === quizData.length - 1) {\n      this.setState({\n        correctAnswers: correctAnswers + point,\n        userSlectedAns: null,\n        isLoading: true,\n        quizIsCompleted: true,\n        questionIndex: 0,\n        options: null,\n        questionsAndAnswers\n      });\n\n      return;\n    }\n\n    const outPut = getRandomNumber(0, 3);\n\n    const options = [...quizData[questionIndex + 1].incorrect_answers];\n    options.splice(outPut, 0, quizData[questionIndex + 1].correct_answer);\n\n    this.setState({\n      correctAnswers: correctAnswers + point,\n      questionIndex: questionIndex + 1,\n      userSlectedAns: null,\n      options,\n      outPut,\n      questionsAndAnswers\n    });\n  }\n\n  timesUp() {\n    this.setState({\n      userSlectedAns: null,\n      isLoading: true,\n      quizIsCompleted: true,\n      questionIndex: 0,\n      options: null\n    });\n  }\n\n  timeAmount(timerTime, totalTime) {\n    this.timeTakesToComplete = {\n      timerTime,\n      totalTime\n    };\n  }\n\n  renderResult() {\n    setTimeout(() => {\n      const { quizData, correctAnswers, questionsAndAnswers } = this.state;\n      const { backToHome } = this.props;\n\n      const resultRef = (\n        <Result\n          totalQuestions={quizData.length}\n          correctAnswers={correctAnswers}\n          timeTakesToComplete={this.timeTakesToComplete}\n          questionsAndAnswers={questionsAndAnswers}\n          retakeQuiz={this.retakeQuiz}\n          backToHome={backToHome}\n        />\n      );\n\n      this.setState({ resultRef, questionsAndAnswers: [] });\n    }, 2000);\n  }\n\n  retakeQuiz() {\n    const { quizData, questionIndex } = this.state;\n    const outPut = getRandomNumber(0, 3);\n    const options = [...quizData[questionIndex].incorrect_answers];\n    options.splice(outPut, 0, quizData[questionIndex].correct_answer);\n\n    this.setState({\n      correctAnswers: 0,\n      quizIsCompleted: false,\n      startNewQuiz: true,\n      options,\n      outPut\n    });\n  }\n\n  startNewQuiz() {\n    setTimeout(() => {\n      this.setState({ isLoading: false, startNewQuiz: false, resultRef: null });\n    }, 1000);\n  }\n\n  render() {\n    const {\n      quizData,\n      questionIndex,\n      options,\n      userSlectedAns,\n      isLoading,\n      quizIsCompleted,\n      resultRef,\n      startNewQuiz,\n      isOffline\n      // outPut,\n      // correctAnswers,\n    } = this.state;\n\n    // console.log(userSlectedAns);\n    // console.log(questionIndex, outPut);\n    // console.log('Score ==>', correctAnswers);\n\n    if (quizIsCompleted && !resultRef) {\n      this.renderResult();\n      // console.log('Redirecting to result');\n    }\n\n    if (startNewQuiz) {\n      this.startNewQuiz();\n    }\n\n    return (\n      <Item.Header>\n        {!isOffline && !quizIsCompleted && isLoading && <Loader />}\n\n        {!isOffline && !isLoading && (\n          <Container>\n            <Segment>\n              <Item.Group divided>\n                <Item>\n                  <Item.Content>\n                    <Item.Extra>\n                      <Header as=\"h1\" block floated=\"left\">\n                        <Icon name=\"info circle\" />\n                        <Header.Content>\n                          {`Question No.${questionIndex + 1} of ${\n                            quizData.length\n                          }`}\n                        </Header.Content>\n                      </Header>\n                      <Countdown\n                        countdownTime={this.props.countdownTime}\n                        timesUp={this.timesUp}\n                        timeAmount={this.timeAmount}\n                      />\n                    </Item.Extra>\n                    <br />\n                    <Item.Meta>\n                      <Message size=\"huge\" floating>\n                        <b>{`Q. ${he.decode(\n                          quizData[questionIndex].question\n                        )}`}</b>\n                      </Message>\n                      <br />\n                      <Item.Description>\n                        <h3>Please choose one of the following answers:</h3>\n                      </Item.Description>\n                      <Divider />\n                      <Menu vertical fluid size=\"massive\">\n                        {options.map((option, i) => {\n                          let letter;\n\n                          switch (i) {\n                            case 0:\n                              letter = 'A.';\n                              break;\n                            case 1:\n                              letter = 'B.';\n                              break;\n                            case 2:\n                              letter = 'C.';\n                              break;\n                            case 3:\n                              letter = 'D.';\n                              break;\n                            default:\n                              letter = i;\n                              break;\n                          }\n\n                          const decodedOption = he.decode(option);\n\n                          return (\n                            <Menu.Item\n                              key={decodedOption}\n                              name={decodedOption}\n                              active={userSlectedAns === decodedOption}\n                              onClick={this.handleItemClick}\n                            >\n                              <b style={{ marginRight: '8px' }}>{letter}</b>\n                              {decodedOption}\n                            </Menu.Item>\n                          );\n                        })}\n                      </Menu>\n                    </Item.Meta>\n                    <Divider />\n                    <Item.Extra>\n                      <Button\n                        primary\n                        content=\"Next\"\n                        onClick={this.handleNext}\n                        floated=\"right\"\n                        size=\"big\"\n                        icon=\"right chevron\"\n                        labelPosition=\"right\"\n                        disabled={!userSlectedAns}\n                      />\n                    </Item.Extra>\n                  </Item.Content>\n                </Item>\n              </Item.Group>\n            </Segment>\n            <br />\n          </Container>\n        )}\n\n        {quizIsCompleted && !resultRef && (\n          <Loader text=\"Getting your result.\" />\n        )}\n\n        {quizIsCompleted && resultRef}\n\n        {isOffline && <Offline />}\n      </Item.Header>\n    );\n  }\n}\n\nexport default Quiz;\n","import React, { Component, Fragment } from 'react';\n\n// import Header from '../Header';\nimport Main from '../Main';\nimport Quiz from '../Quiz';\nimport Loader from '../Loader';\n\nimport { PATH_BASE, AMOUNT, CATEGORY, DIFFICULTY, TYPE } from '../../api';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isQuizStart: false,\n      API: null,\n      countdownTime: null,\n      isLoading: false\n    };\n\n    this.startQuiz = this.startQuiz.bind(this);\n    this.backToHome = this.backToHome.bind(this);\n  }\n\n  startQuiz(selectedValues) {\n    const { category, numOfQ, difficulty, type, time } = selectedValues;\n\n    const API = `${PATH_BASE + AMOUNT + numOfQ}&${CATEGORY +\n      category}&${DIFFICULTY + difficulty}&${TYPE + type}`;\n\n    this.setState({ isQuizStart: true, API, countdownTime: time });\n  }\n\n  backToHome() {\n    this.setState({ isLoading: true });\n\n    setTimeout(() => {\n      this.setState({\n        isQuizStart: false,\n        API: null,\n        countdownTime: null,\n        isLoading: false\n      });\n    }, 1000);\n  }\n\n  render() {\n    const { isQuizStart, API, countdownTime, isLoading } = this.state;\n\n    return (\n      <Fragment>\n        {/* <Header /> */}\n        <br/>\n        <br/>\n        {!isLoading && !isQuizStart && <Main startQuiz={this.startQuiz} />}\n        {!isLoading && isQuizStart && (\n          <Quiz\n            API={API}\n            countdownTime={countdownTime}\n            backToHome={this.backToHome}\n          />\n        )}\n        {isLoading && <Loader />}\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","const PATH_BASE = 'https://opentdb.com/api.php?';\n\nconst AMOUNT = 'amount=';\nconst CATEGORY = 'category=';\nconst DIFFICULTY = 'difficulty=';\nconst TYPE = 'type=';\n\nexport { PATH_BASE, AMOUNT, CATEGORY, DIFFICULTY, TYPE };\n","import Swal from 'sweetalert2';\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets;\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          // console.log(\n          //   'This web app is being served cache-first by a service worker.'\n          // );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              // console.log(\n              //   'New content is available and will be used when all ' +\n              //     'tabs for this page are closed.'\n              // );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              // console.log('Content is cached for offline use.');\n              Swal.fire({\n                toast: 'true',\n                position: 'bottom',\n                type: 'success',\n                title: 'App is ready to work offline.',\n                showConfirmButton: false,\n                timer: 6000\n              });\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      // console.log(\n      //   'No internet connection found. App is running in offline mode.'\n      // );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.register();\n"],"sourceRoot":""}